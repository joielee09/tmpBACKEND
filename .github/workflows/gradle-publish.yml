# This workflow will build a package using Gradle and then publish it to GitHub packages when a release is created
# For more information see: https://github.com/actions/setup-java/blob/main/docs/advanced-usage.md#Publishing-using-gradle

name: Gradle Package

on:
  push: 
    branches: [main]
  release:
    types: [created]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 11
      uses: actions/setup-java@v1
      with:
        java-version: '11'

    - name: Grant execute permission for gradlew
      run: chmod +x gradlew

#     - name: Test with Gradle
#     run: test

    - name: Build with Gradle
      run: ./gradlew build

#     SLACK NOTIFICATION ON NEW MERGE
    - name: action-slack
      uses: 8398a7/action-slack@v3
      with:
        status: ${{ job.status }}
        author_name: Github Action Test # default: 8398a7@action-slack
        fields: repo,message,commit,author,action,eventName,ref,workflow,job,took
      env:
        SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }} # required
      if: always() # Pick up events even if the job fails or is canceled.

#   DOCKER BUILD AND DEPLOY
#   deploy:
#     needs: build
#     name: Deploy
#     runs-on: [ self-hosted, label-development ]
#     steps:
#       - name: Login to ghcr
#         uses: docker/login-action@v1
#         with:
#           registry: ghcr.io
#           username: ${{ github.actor }}
#           password: ${{ secrets.CR_PAT }}
#       - name: Docker run
#         run: |
#           docker ps -q --filter "name=cat" | grep -q . && docker stop cat && docker rm -fv cat
#           docker run -d -p 8000:8000 --name cicd --restart always ${{ env.DOCKER_IMAGE }}:${{ env.VERSION }}
